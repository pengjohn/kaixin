/*!
*@FileName: KaiXinApp_AlbumPhoto.h
*@Author: GoZone
*@Date:
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#ifndef  __KAIXINAPI_ALBUMPHOTO_H__
#define  __KAIXINAPI_ALBUMPHOTO_H__

#include "KaiXinAPI.h"

//相册列表最大条数
#define KX_ALBUM_PHOTO_THUMBNAIL_COUNT_MAX		(200)

typedef struct
{
	char pid[32];
	char title[256];
	char thumbnail[256];
	char large[256];
	char privacy[8];
	char ctime[32];
	char pic130[256];
	char pclarge[256];
	int cnum;
}AlbumPhoto_photos;

typedef struct
{
	int ret;
	char uid[32];
	int n;
	int  nSize_photos;  //Save the array size by code_gen tools. 
	AlbumPhoto_photos*  photos;
}tResponseAlbumPhoto;


extern void* KaiXinAPI_AlbumPhoto_JsonParse(char *text);

class TAlbumPhotoForm : public TWindow
{
public:
	TAlbumPhotoForm(TApplication* pApp);
	virtual ~TAlbumPhotoForm(void);
	virtual Boolean EventHandler(TApplication * appP, EventType * eventP);

private:
	Boolean _OnWinInitEvent(TApplication * pApp, EventType * pEvent);
	Boolean _OnWinClose(TApplication * pApp, EventType * pEvent);
	Boolean _OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent);
	Int32 _SetTilteButton(TApplication * pApp);	
	Int32 _SetFormTilte(TApplication * pApp);
	Int32 _CreateAlbumPhotos(TApplication* pApp);	
private:
	// define private data member here
	tResponseAlbumPhoto* Response;

	//相册缩略图
	Int32 nAlbumThumbnailImage[KX_ALBUM_PHOTO_THUMBNAIL_COUNT_MAX];//存TImage Ctrl ID
	TImage* pAlbumThumbnailImage[KX_ALBUM_PHOTO_THUMBNAIL_COUNT_MAX];//存TImage Ctrl 指针
	TBitmap* pAlbumThumbnailBmp[KX_ALBUM_PHOTO_THUMBNAIL_COUNT_MAX];
	Int32 m_nAlbumPhotoCount;

	Int32 m_TitleButtonCtlID;//标题照片按钮
	char m_AlbumId[32];
	char m_AlbumTitle[256];

	Int32	m_BackBtn;
};

#endif