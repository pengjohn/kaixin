// Application application header file.

// Original file name: App_KaiXinAPI.h
// Generated by TOPS Builder:Project wizard,Date:2010-8-24


#ifndef  __KaiXinAPI_ListView_H__
#define  __KaiXinAPI_ListView_H__
#include "TG3.h"
#include "KaiXinAPI_DiaryList.h"
#include "KaiXinAPI_RepasteIndex.h"
#include "KaiXinAPI_RecordList.h"

typedef enum
{
	DiaryListView,		//日记
	RecordListView,		//记录
}AppListViewType;

class TAppListViewForm : public TWindow
{
public:
	TAppListViewForm( TApplication *pApp, AppListViewType appListViewType, Boolean bNew = TRUE);	
	~TAppListViewForm(void );	
	virtual Boolean EventHandler( TApplication * pApp, EventType * pEvent );
private:
	// define private method here
	Boolean _OnWinInitEvent(TApplication * pApp, EventType * pEvent);
	Boolean _OnCtlSelectEvent(TApplication * pApp, EventType * pEvent);
	Boolean _OnCtrlSetFocusEvent(TApplication * pApp, EventType * pEvent);
	Boolean _OnCtrlKillFocusEvent(TApplication * pApp, EventType * pEvent);	
	Boolean _OnLstPreDrawEvent(EventType * pEvent);	
	Boolean _OnCoolListViewCustomDrawEvent(TApplication * pApp, EventType * pEvent);	

	Int32 _LoadDataResouse(AppListViewType appListViewType);

	void _SetCoolBarListRowItem(TApplication * pApp);	
	void ShowItemDetail(TApplication * pApp, Int32 nRowIndex);	
	int SetAppTitle(AppListViewType appListViewType);

	Int32 _OnDataFree();

private:
	// define private data member here
	tResponseDiaryList* m_pDiaryListResponse; 
	tResponseRepasteIndex* m_pRepasteIndexResponse;
	tResponseRecordList* m_pRecordListResponse;

	//control 
	Int32 m_iaCreateCtlID[128];
	TCtrl *m_obContrl[56];
	Int32 m_nCtlIDCount;

	Int32 m_nCoolListPatternItemNum;

	Int32 m_nTitleLblID;//use to save title label ID

	//coollistview
	Int32 m_nCoolListViewID;//use to save the coollistview ID
	Int32 m_nCoolTotalRows;

	//Firsr item: title or image
	//TBitmap* pCoolBmp; //if the first item type is Image

	AppListViewType m_appListViewType;
	char fname[32];
	char fuid[32];

	//写按钮ID
	Int32 m_WriteBtn; 

	Int32	m_BackBtn;
};


#endif
