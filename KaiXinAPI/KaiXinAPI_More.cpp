/*!
* \file	 KaiXinApp_More.cpp
* \author	 GoZone
* \date	
* \brief  UI: 功能入口
*
* \ref    CopyRight
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "KaiXinAPICommon.h"

void* KaiXinAPI_More_JsonParse(char *text)
{
	cJSON *json;
	cJSON *pTemp0;
	tResponseMore*  Response = new tResponseMore;
	memset(Response, 0 , sizeof(tResponseMore));

	json = cJSON_Parse(text);

	pTemp0 = cJSON_GetObjectItem(json,"ret");
	if (pTemp0)
	{
		Response->ret = pTemp0->valueint;	
	}

	//Success
	if(Response->ret == 1)
	{
		pTemp0 = cJSON_GetObjectItem(json, "uid");
		if(pTemp0)
		{
			Response->uid = pTemp0->valueint;
		}


	}
	//Failue
	else
	{
		//pTemp0 = cJSON_GetObjectItem(json,"msg");
		//if (pTemp0)
		//{
		//	strcpy(Response->msg, pTemp0 ->valuestring);	
		//}
	}
	cJSON_Delete(json);
	return Response;
}



// 构造函数
TMoreForm::TMoreForm(TApplication* pApp):TWindow(pApp)
{
	m_nCtlIDCount = 0;

	//use to save buttons ID
	m_nNewsBtnID = 0;//动态
	m_nFriendsBtnID = 0;//好友
	m_nInfosBtnID = 0;//我的地盘
	m_nAppsBtnID = 0;//组件
	m_nMoreBtnID = 0;//更多

	m_RefreshBtn = 0;
	m_ExitBtn = 0;

	Create(APP_KA_ID_MoreForm);
}

// 析构函数
TMoreForm::~TMoreForm(void)
{

}

// 窗口事件处理
Boolean TMoreForm::EventHandler(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;

	switch (pEvent->eType)
	{
	case EVENT_WinInit:
		{
			_OnWinInitEvent(pApp, pEvent);
			bHandled = TRUE;
			break;
		}

	case EVENT_WinClose:
		{
			_OnWinClose(pApp, pEvent);
			break;
		}
	case EVENT_WinEraseClient:
		{
			TDC 	   dc(this);
			WinEraseClientEventType *pEraseEvent = reinterpret_cast< WinEraseClientEventType* >( pEvent );
			TRectangle rc(pEraseEvent->rc);
			TRectangle rcBack(5, 142, 310, 314);
			this->GetBounds(&rcBack);

			// 擦除
			dc.EraseRectangle(&rc, 0);

			dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_KA_ID_BITMAP_title_bg), 0, 0, SCR_W, GUI_API_STYLE_ALIGNMENT_LEFT);

			//dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_KA_ID_BITMAP_bottom_bg), 0, rcBack.Bottom()-68, 
			//320, GUI_API_STYLE_ALIGNMENT_LEFT|GUI_API_STYLE_ALIGNMENT_TOP); 


			pEraseEvent->result = 1;				
			bHandled = TRUE;
		}
		break;
	case EVENT_CtrlSelect:
		{
			bHandled = _OnCtrlSelectEvent(pApp, pEvent);
			break;
		}
	case EVENT_KeyCommand: 
		{ 
			// 抓取右软键事件 
			if (pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_UP  
				|| pEvent->sParam1 == SYS_KEY_SOFTKEY_RIGHT_LONG) 
			{ 
				// 模拟退出按钮选中消息 
				HitControl(m_ExitBtn); 
				bHandled = TRUE; 
			} 
		} 
		break;		

	default:
		break;
	}

	if (!bHandled)
	{
		bHandled = TWindow::EventHandler(pApp, pEvent);
	}

	return bHandled;
}

// 窗口初始化
Boolean TMoreForm::_OnWinInitEvent(TApplication * pApp, EventType * pEvent)
{
	//SetTilteButton(pApp);
	TPanel *pMorePanel = static_cast<TPanel*>(GetControlPtr(APP_KA_ID_MoreForm_MorePanel));
	if(pMorePanel)
	{
		pMorePanel->SetVerticalDragMode(cdmDisable);
	}

	//m_RefreshBtn = SetAppRefreshButton(this);
	m_ExitBtn = SetAppExitButton(this);

	SetAppTilte(this, APP_KA_ID_STRING_More);
	_CreateTabButtons(pApp);
	return TRUE;
}

// 关闭窗口时，保存设置信息
Boolean TMoreForm::_OnWinClose(TApplication * pApp, EventType * pEvent)
{
	return TRUE;
}


// 控件点击事件处理
Boolean TMoreForm::_OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;
	SS_GTID			gtidMain;
	SS_GetCurrentGTID(&gtidMain);	

	if(pEvent->sParam1 == this->m_nNewsBtnID)//动态
	{
		//App_PostMessageEx(&gtidMain, MSG_SWITCHFORM_UPDATE_FRIENDS_NEWS, NULL, 0, 0, 0);	
		KaiXinAPICommon_Download(KX_UpdateFriendsNews, this->GetWindowHwndId());
		bHandled = TRUE;
	}
	else if(pEvent->sParam1 == this->m_nFriendsBtnID)//好友
	{
		KaiXinAPICommon_Download(KX_FriendList, this->GetWindowHwndId());
		bHandled = TRUE;
	}
	else if(pEvent->sParam1 == this->m_nInfosBtnID)//我的地盘
	{
		KaiXinAPICommon_Download(KX_Profile, this->GetWindowHwndId());
		bHandled = TRUE;
	}
	else if(pEvent->sParam1 == this->m_nAppsBtnID)//组件
	{
		App_PostMessageEx(&gtidMain, MSG_SWITCHFORM_APPLIST, NULL, 0, 0, 0);			
		//KaiXinAPICommon_Download(KX_ApplicationList, this->GetWindowHwndId());
		bHandled = TRUE;
	}	
	else if(pEvent->sParam1 == this->m_nMoreBtnID)//更多
	{
		bHandled = TRUE;
	}
	else if(pEvent->sParam1 == m_ExitBtn)//退出
	{
		App_PostMessageEx(&gtidMain, MSG_EXIT, NULL, 0, 0, 0);	
		bHandled = TRUE;
	}
	else if(pEvent->sParam1 == m_RefreshBtn)//刷新
	{
		App_PostMessageEx(&gtidMain, MSG_SWITCHFORM_MORE, NULL, 0, 0, 0);			
		bHandled = TRUE;
	}	
	else
	{
		switch(pEvent->sParam1)
		{	
		case APP_KA_ID_MoreForm_MoreList:
			{ 
				TBarRow *pRow = reinterpret_cast< TBarRow* > ( pEvent->sParam2 ); 
				switch( pRow->GetIndex() ) 
				{ 
				case 0: 
					{ 
						TBarListItem *pItem = reinterpret_cast < TBarListItem* >( pEvent->lParam3 ); 
						int ActionType = pItem->GetIndex() + 1;

						switch(ActionType) 
						{ 
						case KX_More_FeedBack:
							{
								TFeedBackForm *pWin = new TFeedBackForm( pApp );
								bHandled = TRUE;					
							}
							break;
						case KX_More_Settings:
							{					
								TSettingsForm *pWin = new TSettingsForm( pApp );
								bHandled = TRUE;					
							}
							break;
						case KX_More_About:
							{
								TAboutForm *pWin = new TAboutForm( pApp );
								bHandled = TRUE;									
								break;
							}
						case KX_More_Logout:
							{
								//KaiXinAPICommon_Download(KX_Logout, this->GetWindowHwndId());
								App_PostMessageEx(&gtidMain, MSG_LOGOUT, NULL, 0, 0, 0);						
								//登出成功后 应该关闭所有开心窗口
								bHandled = TRUE;
							}
							break;

						default:
							break;
						}
					} 
					break;

				default:
					break;
				} 
				bHandled = TRUE; 
			}

		default:
			break;		
		}
	}

	return bHandled;
}
Int32 TMoreForm::SetTilteButton(TApplication * pApp)
{
	TCtrl *m_TitleButtonContrl;
	TRectangle obBtnRec(0,0,0,0);	//初始(left, top, w, h)
	Int32 m_TitleButtonCtlID = 0;

	//创建图片按钮
	m_TitleButtonContrl =new TButton ;	

	obBtnRec.SetRect(BUTTON_X, BUTTON_Y, BUTTON_W, BUTTON_H);
	if(m_TitleButtonContrl->Create(this))
	{
		m_TitleButtonContrl->SetBounds(&obBtnRec);	
		m_TitleButtonCtlID = m_TitleButtonContrl->GetId();

		m_TitleButtonContrl->SetCaption(TResource::LoadConstString(APP_KA_ID_ProfileForm_ReleaseBtn),FALSE);//发布
		m_TitleButtonContrl->Show(TRUE);		
	}

	return m_TitleButtonCtlID;
}


//----------------------------------------------------------------------------
//创建页面下方Tab Button部分，必须有5个成员变量来保存ButtonID, 
/*
Int32 m_nNewsBtnID;//动态
Int32 m_nFriendsBtnID;//好友
Int32 m_nInfosBtnID;//我的地盘
Int32 m_nAppsBtnID;//组件
Int32 m_nMoreBtnID;//更多

*/
Int32 TMoreForm::_CreateTabButtons(TApplication* pApp)
{
	Int32 bnRetCod = 0; 
	TRectangle obBtnRec(100,50,150,30); //初始(left, top, w, h)
	TFont tFont;

	//control 
	Int32 m_iaCreateCtlID[56] = {0};
	TCtrl *m_obContrl[56] = {NULL};
	Int32 m_nCtlIDCount = 0;

	//use to save buttons ID
	m_nNewsBtnID = 0;//动态
	m_nFriendsBtnID = 0;//好友
	m_nInfosBtnID = 0;//我的地盘
	m_nAppsBtnID = 0;//组件
	m_nMoreBtnID = 0;//更多


	//创建5个页面对应的按钮
	const TBitmap * pImgBG = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_bottom_btn_bg);

	//动态	
	const TBitmap * pImgNormal1 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_news);
	const TBitmap * pImgDown1 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_news_over);	
	obBtnRec.SetRect(0, (SCR_H - STATUSBAR_H - BOTTOM_TAB_H), BOTTOM_TAB_W, BOTTOM_TAB_H);

	TMaskButton* pNewsBtn =new TMaskButton;;
	if(pNewsBtn->Create(this))
	{
		pNewsBtn->SetBounds(&obBtnRec);		
		m_nNewsBtnID = pNewsBtn->GetId();//save button ID
		pNewsBtn->SetMaskImage(pImgBG,pImgBG,pImgBG);
		pNewsBtn->SetImage(pImgNormal1, (BOTTOM_TAB_W-pImgNormal1->GetWidth())/2, (BOTTOM_TAB_H-pImgNormal1->GetHeight())/2);	
		pNewsBtn->SetSelImage(pImgDown1, (BOTTOM_TAB_W-pImgDown1->GetWidth())/2, (BOTTOM_TAB_H-pImgDown1->GetHeight())/2);	
	}
	else
	{
		bnRetCod ++;
	}

	//好友	
	const TBitmap * pImgNormal2 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_friend);
	const TBitmap * pImgDown2 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_friend_over);	
	obBtnRec.SetRect(BOTTOM_TAB_W, (SCR_H - STATUSBAR_H - BOTTOM_TAB_H), BOTTOM_TAB_W, BOTTOM_TAB_H);

	TMaskButton* pFriendsBtn =new TMaskButton;;
	if(pFriendsBtn->Create(this))
	{
		pFriendsBtn->SetBounds(&obBtnRec);		
		m_nFriendsBtnID = pFriendsBtn->GetId();//save button ID
		pFriendsBtn->SetMaskImage(pImgBG,pImgBG,pImgBG);
		pFriendsBtn->SetImage(pImgNormal2,(BOTTOM_TAB_W-pImgNormal2->GetWidth())/2,(BOTTOM_TAB_H-pImgNormal2->GetHeight())/2);	
		pFriendsBtn->SetSelImage(pImgDown2,(BOTTOM_TAB_W-pImgDown2->GetWidth())/2,(BOTTOM_TAB_H-pImgDown2->GetHeight())/2);					
	}
	else
	{
		bnRetCod ++;
	}


	//我的地盘

	//当前form为我的地盘，所以图标都是选中图片			
	const TBitmap * pImgNormal3 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_info);//APP_KA_ID_BITMAP_info
	const TBitmap * pImgDown3 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_info_over);	
	obBtnRec.SetRect(BOTTOM_TAB_W*2, (SCR_H - STATUSBAR_H - BOTTOM_TAB_H), BOTTOM_TAB_W, BOTTOM_TAB_H);
	TMaskButton* pInfosBtn =new TMaskButton;;
	if(pInfosBtn->Create(this))
	{
		pInfosBtn->SetBounds(&obBtnRec);		
		m_nInfosBtnID = pInfosBtn->GetId();//save button ID
		pInfosBtn->SetMaskImage(pImgBG,pImgBG,pImgBG);
		pInfosBtn->SetImage(pImgNormal3,(BOTTOM_TAB_W-pImgNormal3->GetWidth())/2,(BOTTOM_TAB_H-pImgNormal3->GetHeight())/2);	
		pInfosBtn->SetSelImage(pImgDown3,(BOTTOM_TAB_W-pImgDown3->GetWidth())/2,(BOTTOM_TAB_H-pImgDown3->GetHeight())/2);					
	}
	else
	{
		bnRetCod ++;
	}

	//组件
	const TBitmap * pImgNormal4 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_module);
	const TBitmap * pImgDown4 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_module_over);
	obBtnRec.SetRect(BOTTOM_TAB_W*3, (SCR_H - STATUSBAR_H - BOTTOM_TAB_H),BOTTOM_TAB_W, BOTTOM_TAB_H);
	TMaskButton* pAppsBtn =new TMaskButton;;
	if(pAppsBtn->Create(this))
	{
		pAppsBtn->SetBounds(&obBtnRec);		
		m_nAppsBtnID = pAppsBtn->GetId();//save button ID
		pAppsBtn->SetMaskImage(pImgBG,pImgBG,pImgBG);
		pAppsBtn->SetImage(pImgNormal4,(BOTTOM_TAB_W-pImgNormal4->GetWidth())/2,(BOTTOM_TAB_H-pImgNormal4->GetHeight())/2);	
		pAppsBtn->SetSelImage(pImgDown4,(BOTTOM_TAB_W-pImgDown4->GetWidth())/2,(BOTTOM_TAB_H-pImgDown4->GetHeight())/2);					
	}
	else
	{
		bnRetCod ++;
	}

	//更多
	const TBitmap * pImgNormal5 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_more_over);
	const TBitmap * pImgDown5 = TResource::LoadConstBitmap(APP_KA_ID_BITMAP_more_over);	
	obBtnRec.SetRect(BOTTOM_TAB_W*4, (SCR_H - STATUSBAR_H - BOTTOM_TAB_H), BOTTOM_TAB_W, BOTTOM_TAB_H);

	TMaskButton* pMoreBtn =new TMaskButton;;
	if(pMoreBtn->Create(this))
	{
		pMoreBtn->SetBounds(&obBtnRec);		
		m_nMoreBtnID = pMoreBtn->GetId();//save button ID
		pMoreBtn->SetMaskImage(pImgBG,pImgBG,pImgBG);
		pMoreBtn->SetImage(pImgNormal5,(BOTTOM_TAB_W-pImgNormal5->GetWidth())/2,(BOTTOM_TAB_H-pImgNormal5->GetHeight())/2);	
		pMoreBtn->SetSelImage(pImgDown5,(BOTTOM_TAB_W-pImgDown5->GetWidth())/2,(BOTTOM_TAB_H-pImgDown5->GetHeight())/2);					
	}
	else
	{
		bnRetCod ++;
	}			

	return bnRetCod;
}

