/*!
* \file	 KaiXinApp_Notice.cpp
* \author	 pengzhixiong@GoZone
* \date	 2010-11-4
* \brief  解析与UI: 获取新消息通知

*
* \ref    CopyRight
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "KaiXinAPICommon.h"

void* KaiXinAPI_Notice_JsonParse(char *text)
{
	cJSON *json;
	cJSON *pTemp0;
	tResponseNotice*  Response = new tResponseNotice;
	memset(Response, 0 , sizeof(tResponseNotice));

	json = cJSON_Parse(text);

	pTemp0 = cJSON_GetObjectItem(json,"ret");
	if (pTemp0)
	{
		Response->ret = pTemp0->valueint;	
	}

	//Success
	if(Response->ret == 1)
	{
		pTemp0 = cJSON_GetObjectItem(json, "n");
		if(pTemp0)
		{
			Response->n = pTemp0->valueint;
		}
		pTemp0 = cJSON_GetObjectItem(json, "notices");
		if(pTemp0)
		{
			int nSize1 = 0, i = 0;
			nSize1 = cJSON_GetArraySize(pTemp0);
			Response->nSize_notices = nSize1;
			if( nSize1 != 0 )
			{
				Response->notices = NULL;
				Response->notices = (Notice_notices*) malloc(sizeof( Notice_notices ) * nSize1 );
				memset(Response->notices, 0 , sizeof(Notice_notices) * nSize1 );
			}
			for ( i = 0; i < nSize1; i++ )
			{
				cJSON *Item1 = NULL, *pTemp1 = NULL;
				Item1 = cJSON_GetArrayItem(pTemp0,i);
				pTemp1 = cJSON_GetObjectItem(Item1, "mtype");
				if(pTemp1)
				{
					Response->notices[i].mtype = pTemp1->valueint;
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "n");
				if(pTemp1)
				{
					Response->notices[i].n = pTemp1->valueint;
				}

			}
		}

	}
	//Failue
	else
	{
		//pTemp0 = cJSON_GetObjectItem(json,"msg");
		//if (pTemp0)
		//{
		//	strcpy(Response->msg, pTemp0 ->valuestring);	
		//}
	}
	cJSON_Delete(json);
	return Response;
}

