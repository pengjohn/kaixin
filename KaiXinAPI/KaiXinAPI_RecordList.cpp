/*!
* \file	 KaiXinApp_RecordList.cpp
* \author	 GoZone
* \date	
* \brief  解析与UI: 用户记录列表
*
* \ref    CopyRight
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/
#include "KaiXinAPICommon.h"


void* KaiXinAPI_RecordList_JsonParse(char *text)
{
	cJSON *json;
	cJSON *pTemp0;
	tResponseRecordList*  Response = new tResponseRecordList;
	memset(Response, 0 , sizeof(tResponseRecordList));

	json = cJSON_Parse(text);

	pTemp0 = cJSON_GetObjectItem(json,"ret");
	if (pTemp0)
	{
		Response->ret = pTemp0->valueint;	
	}

	//Success
	if(Response->ret == 1)
	{
		pTemp0 = cJSON_GetObjectItem(json, "uid");
		if(pTemp0)
		{
			STRCPY_Ex(Response->uid, pTemp0->valuestring);
			//Response->uid = pTemp0->valueint;
		}
		pTemp0 = cJSON_GetObjectItem(json, "n");
		if(pTemp0)
		{
			Response->n = pTemp0->valueint;
		}
		pTemp0 = cJSON_GetObjectItem(json, "total");
		if(pTemp0)
		{
			STRCPY_Ex(Response->total, pTemp0->valuestring);
			//Response->total = pTemp0->valueint;
		}
		pTemp0 = cJSON_GetObjectItem(json, "recordlist");
		if(pTemp0)
		{
			int nSize1 = 0, i = 0;
			nSize1 = cJSON_GetArraySize(pTemp0);
			Response->nSize_recordlist = nSize1;
			if( nSize1 != 0 )
			{
				Response->recordlist = NULL;
				Response->recordlist = (RecordList_recordlist*) malloc(sizeof( RecordList_recordlist ) * nSize1 );
				memset(Response->recordlist, 0 , sizeof(RecordList_recordlist) * nSize1 );
			}
			for ( i = 0; i < nSize1; i++ )
			{
				cJSON *Item1 = NULL, *pTemp1 = NULL;
				Item1 = cJSON_GetArrayItem(pTemp0,i);
				pTemp1 = cJSON_GetObjectItem(Item1, "rid");
				if(pTemp1)
				{
					if(pTemp1->valuedouble > 0)
						DoubleToChar(pTemp1->valuedouble, Response->recordlist[i].rid);
					else
						STRCPY_Ex(Response->recordlist[i].rid, pTemp1->valuestring);
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "ctime");
				if(pTemp1)
				{
					Response->recordlist[i].ctime = pTemp1->valueint;
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "strctime");
				if(pTemp1)
				{
					STRCPY_Ex(Response->recordlist[i].strctime, pTemp1->valuestring);
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "content");
				if(pTemp1)
				{
					STRCPY_Ex(Response->recordlist[i].content, pTemp1->valuestring);
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "commentnum");
				if(pTemp1)
				{
					Response->recordlist[i].commentnum = pTemp1->valueint;
				}
				pTemp1 = cJSON_GetObjectItem(Item1, "upnum");
				if(pTemp1)
				{
					Response->recordlist[i].upnum = pTemp1->valueint;
				}

			}
		}

	}
	//Failue
	else
	{
		//pTemp0 = cJSON_GetObjectItem(json,"msg");
		//if (pTemp0)
		//{
		//	strcpy(Response->msg, pTemp0 ->valuestring);	
		//}
	}
	cJSON_Delete(json);
	return Response;
}



