/*!
*@FileName: KaiXinApp_Repaste_Vote.h
*@Author: huxianxiang@GoZone
*@Date: 2010-10-6
*@Log: 	Author 			Date 		Description
*
*@section Copyright
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#ifndef  __KAIXINAPI_REPASTE_VOTE_H__
#define  __KAIXINAPI_REPASTE_VOTE_H__

#include "KaiXinAPI.h"

#define KAIXIN_REPASTE_VOTE_TAG_MAX_NUM		(15)

typedef struct
{
	int ret;
	int uid;
}PostVote_repaste;

typedef struct
{
	int ret;
	char uid[16+1];
	int ErrorNo;
	char ErrorInfo[128*3 + 1];
	int  nSize_repaste;  //Save the array size by code_gen tools. 
	PostVote_repaste*  repaste;
}tResponsePostVote;

typedef enum
{
	KX_REPASTE_VOTE_TYPE_LIST,
	KX_REPASTE_VOTE_TYPE_TAG,	
}RepasteVoteType;

extern void* KaiXinAPI_PostVote_JsonParse(char *text);

class TRepaste_VoteForm : public TWindow
{
public:
	TRepaste_VoteForm(TApplication* pApp, RepasteVoteType nType, Boolean bNew = TRUE);
	TRepaste_VoteForm(TApplication* pApp);
	virtual ~TRepaste_VoteForm(void);
	virtual Boolean EventHandler(TApplication * appP, EventType * eventP);

private:
	Boolean _OnWinInitEvent(TApplication * pApp, EventType * pEvent);
	Boolean _OnWinClose(TApplication * pApp, EventType * pEvent);
	Boolean _OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent);
	Int32 _InitVoteForm(TApplication * pApp);
	Int32 _InitTagForm(TApplication * pApp);
	Boolean TRepaste_APIInit(TApplication* pApp);

protected:

	RepasteVoteType VoteType;
	Kx_AccessType  nAPIHandle;
	TCtrl* 	pTagCtrl[KAIXIN_REPASTE_VOTE_TAG_MAX_NUM];
	Int32 	nTagCtrlID[KAIXIN_REPASTE_VOTE_TAG_MAX_NUM];
	Int32 	nTagID[KAIXIN_REPASTE_VOTE_TAG_MAX_NUM];
	Int32 	nTagCount;
	Int32 	nNewTagBtn;
	Int32	m_BackBtn;		
};

#endif