/*!
* \file	 KaiXinApp_SendBirthdayGift.cpp
* \author	 huxianxiang@GoZone
* \date	 2010-9-28
* \brief  解析与UI: 送生日礼物
*
* \ref    CopyRight
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "KaiXinAPICommon.h"

void* KaiXinAPI_SendBirthdayGift_JsonParse(char *text)
{
	cJSON *json;
	cJSON *pTemp;
	tResponseSendBirthdayGift*  Response = new tResponseSendBirthdayGift;
	memset(Response, 0 , sizeof(tResponseSendBirthdayGift));

	json = cJSON_Parse(text);

	pTemp = cJSON_GetObjectItem(json,"ret");
	if (pTemp)
	{
		Response->ret = pTemp->valueint;	
	}

	if(Response->ret == 1)
	{
		pTemp = cJSON_GetObjectItem(json, "uid");
		if(pTemp)
		{
			STRCPY_Ex(Response->uid, pTemp->valuestring);
		}
	}
	else
	{
		pTemp = cJSON_GetObjectItem(json, "errno");
		if(pTemp)
		{
			Response->ErrorNo = pTemp->valueint;
		}

		pTemp = cJSON_GetObjectItem(json, "error");
		if(pTemp)
		{
			STRCPY_Ex(Response->ErrorInfo, pTemp->valuestring);
		}
	}
	cJSON_Delete(json);
	return Response;
}

TSendBirthdayGiftForm::TSendBirthdayGiftForm(TApplication* pApp):TWindow(pApp)
{
	//Create(APP_KA_ID_KaiXinHomePage);
}

// 析构函数
TSendBirthdayGiftForm::~TSendBirthdayGiftForm(void)
{

}

// 窗口事件处理
Boolean TSendBirthdayGiftForm::EventHandler(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;

	switch (pEvent->eType)
	{
	case EVENT_WinInit:
		{
			_OnWinInitEvent(pApp, pEvent);
			bHandled = TRUE;
			break;
		}

	case EVENT_WinClose:
		{
			_OnWinClose(pApp, pEvent);
			break;
		}
	case EVENT_WinEraseClient:
		{
			TDC 	   dc(this);
			WinEraseClientEventType *pEraseEvent = reinterpret_cast< WinEraseClientEventType* >( pEvent );
			TRectangle rc(pEraseEvent->rc);
			TRectangle rcBack(5, 142, 310, 314);
			this->GetBounds(&rcBack);

			// 擦除
			dc.EraseRectangle(&rc, 0);

			dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_KA_ID_BITMAP_title_bg), 0, 0, SCR_W,
				GUI_API_STYLE_ALIGNMENT_LEFT);

			//dc.DrawBitmapsH(TResource::LoadConstBitmap(APP_KA_ID_BITMAP_bottom_bg), 0, rcBack.Bottom()-68, 
			//320, GUI_API_STYLE_ALIGNMENT_LEFT|GUI_API_STYLE_ALIGNMENT_TOP); 


			pEraseEvent->result = 1;				
			bHandled = TRUE;
		}
		break;
	case EVENT_CtrlSelect:
		{
			bHandled = _OnCtrlSelectEvent(pApp, pEvent);
			break;
		}
	default:
		break;
	}

	if (!bHandled)
	{
		bHandled = TWindow::EventHandler(pApp, pEvent);
	}

	return bHandled;
}

// 窗口初始化
Boolean TSendBirthdayGiftForm::_OnWinInitEvent(TApplication * pApp, EventType * pEvent)
{
	int iRet =0;
	tResponseSendBirthdayGift* Response = NULL;
	iRet = KaiXinAPI_JsonParse(KX_SendBirthdayGift, (void **)&Response);

	if( Response )
	{
		delete Response;	
	}	
	return TRUE;
}

// 关闭窗口时，保存设置信息
Boolean TSendBirthdayGiftForm::_OnWinClose(TApplication * pApp, EventType * pEvent)
{
	return TRUE;
}


// 控件点击事件处理
Boolean TSendBirthdayGiftForm::_OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled;

	bHandled = FALSE;

	switch(pEvent->sParam1)
	{
	case 0:
		{
			break;
		}
	default:
		break;
	}

	return bHandled;
}