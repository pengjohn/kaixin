/*!
* \file	 KaiXinApp_WaitingBox.cpp
* \author	 pengzhixiong@GoZone
* \date	 2010-10-7
* \brief  UI: 下载中要有等待界面，防止用户误操作
*
* \ref    CopyRight
* =======================================================================<br>
*          Copyright ? 2010-2012 GOZONE <br>
*                All Rights Reserved.<br>
* The file is generated by Kaixin_Component Wizard for Tranzda Mobile Platform <br>
* =======================================================================<br>
*/

#include "KaiXinAPICommon.h"


// 构造函数
TWaitingBoxForm::TWaitingBoxForm(TApplication* pApp):TWindow(pApp)
{
	Create(APP_KA_ID_FormWaiting);
	m_pProDialog = new TProgressDialog(pApp);	
}

// 析构函数
TWaitingBoxForm::~TWaitingBoxForm(void)
{
	if(m_pProDialog)
		m_pProDialog->Dismiss();
}

// 窗口事件处理
Boolean TWaitingBoxForm::EventHandler(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled = FALSE;

	switch (pEvent->eType)
	{
	case EVENT_WinInit:
		{
			_OnWinInitEvent(pApp, pEvent);
			bHandled = TRUE;
			break;
		}

	case EVENT_WinClose:
		{
			_OnWinClose(pApp, pEvent);
			break;
		}
	case EVENT_CtrlSelect:
		{
			bHandled = _OnCtrlSelectEvent(pApp, pEvent);
			break;
		}
	case MSG_DL_THREAD_PROCESS:
	case MSG_DL_THREAD_NOTIFY:
		bHandled = TRUE;
		break;

	default:
		break;
	}

	if (!bHandled)
	{
		bHandled = TWindow::EventHandler(pApp, pEvent);
	}

	return bHandled;
}

// 窗口初始化
Boolean TWaitingBoxForm::_OnWinInitEvent(TApplication * pApp, EventType * pEvent)
{
	int iRet =0;

	if(m_pProDialog)
	{
		m_pProDialog->SetTitle(NULL);
		m_pProDialog->SetMessage(TResource::LoadConstString(APP_KA_ID_STRING_Processing));
		m_pProDialog->SetProgressStyle(TProgressDialog::PD_STYLE_SPINNER);
		m_pProDialog->Show(TRUE, FALSE);
	}

	return TRUE;
}

// 关闭窗口时，保存设置信息
Boolean TWaitingBoxForm::_OnWinClose(TApplication * pApp, EventType * pEvent)
{
	return TRUE;
}


// 控件点击事件处理
Boolean TWaitingBoxForm::_OnCtrlSelectEvent(TApplication * pApp, EventType * pEvent)
{
	Boolean bHandled;

	bHandled = FALSE;

	switch(pEvent->sParam1)
	{
	case 0:
		{
			break;
		}
	default:
		break;
	}

	return bHandled;
}